#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <dirent.h>
#include <fcntl.h>
#include <fstream>
#include <iostream>
#include <map>
#include <queue>
#include <sys/stat.h>
#include <sys/types.h>
#include <time.h>
#include <vector>
using namespace std;

struct T {
  string word;
  int count;
};
vector<string> fileStore;
vector<T> array1;
vector<int> wordStore;
map<string, int> wordId;

void woc() {
  string aim;
cout << "What element do you want to search?" << endl;
  cin >> aim;
  wordStore.clear();
  ifstream infile;
  infile.open("/home/");
  int fileCount;
  infile >> fileCount;
  for (int i = 1; i <= fileCount; i++) {
    string aim;
    infile >> aim;
    fileStore.push_back(aim);
  }
  int wordCount;
  infile >> wordCount;
  for (int i = 1; i <= wordCount; i++) {
    int count;
    infile >> count;
    wordStore.push_back(count);
  }
  for (int i = 1; i <= wordCount; i++) {
    string aim1;
    infile >> aim1;
    if (aim == aim1) {
cout << "Result:" << endl;
      for (int j = 1; j <= wordStore[i - 1]; j++) {
        int fileId, sum_word;
        infile >> fileId >> sum_word;
        cout << fileStore[fileId - 1] << " " << sum_word << endl;
      }
      return;
    } else {
      for (int j = 1; j <= wordStore[i - 1]; j++) {
        int fileId, wordSum;
        infile >> fileId >> wordSum;
      }
    }
  }
   cout << "Don't exist this element." << endl;
  infile.close();
}

int main() { woc(); }
